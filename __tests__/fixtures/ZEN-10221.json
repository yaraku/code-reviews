{
   "files":[
      {
         "name":"app\/Services\/Language\/Rules\/LanguageMapper.php",
         "appliedFixers":[
            "concat_space",
            "trailing_comma_in_multiline",
            "blank_line_before_statement"
         ],
         "diff":"--- app\/Services\/Language\/Rules\/LanguageMapper.php\n+++ app\/Services\/Language\/Rules\/LanguageMapper.php\n@@ -50,6 +50,7 @@\n                 return new Thai();\n             default:\n                 $this->logRuleSetNotFoundError($language);\n+\n                 return new English();\n         }\n     }\n@@ -58,10 +59,10 @@\n     {\n         Log::warning(\n             self::class\n-            . '::getLanguageSpecificGetter could not find an rule set for given the given language. '\n-            . 'Used the fallback ruleset (English).',\n+            .'::getLanguageSpecificGetter could not find an rule set for given the given language. '\n+            .'Used the fallback ruleset (English).',\n             [\n-                'language' => $language->id\n+                'language' => $language->id,\n             ]\n         );\n     }\n"
      },
      {
         "name":"app\/Services\/Segment\/Segmentation\/Sentence\/SentenceSegmenterStrategy.php",
         "appliedFixers":[
            "phpdoc_separation"
         ],
         "diff":"--- app\/Services\/Segment\/Segmentation\/Sentence\/SentenceSegmenterStrategy.php\n+++ app\/Services\/Segment\/Segmentation\/Sentence\/SentenceSegmenterStrategy.php\n@@ -17,6 +17,7 @@\n \n     \/**\n      * @return string[]\n+     *\n      * @throws Exception\n      *\/\n     public function getSentences(\n"
      },
      {
         "name":"app\/Services\/Segment\/Segmentation\/Sentence\/SubsegmenterStrategy.php",
         "appliedFixers":[
            "phpdoc_separation"
         ],
         "diff":"--- app\/Services\/Segment\/Segmentation\/Sentence\/SubsegmenterStrategy.php\n+++ app\/Services\/Segment\/Segmentation\/Sentence\/SubsegmenterStrategy.php\n@@ -15,6 +15,7 @@\n \n     \/**\n      * @return array[]\n+     *\n      * @throws Exceptions\\TextLanguageUnsupportedException\n      *\/\n     public function getSubsegments(array $sentences): array\n"
      },
      {
         "name":"database\/migrations\/2022_10_17_062901_insert_finnish_into_language_table.php",
         "appliedFixers":[
            "class_definition",
            "braces",
            "trailing_comma_in_multiline"
         ],
         "diff":"--- database\/migrations\/2022_10_17_062901_insert_finnish_into_language_table.php\n+++ database\/migrations\/2022_10_17_062901_insert_finnish_into_language_table.php\n@@ -13,7 +13,7 @@\n         DB::table('languages')\n             ->insert([\n                 'id' => self::LANGUAGE_CODE,\n-                'type' => 'word'\n+                'type' => 'word',\n             ]);\n     }\n \n"
      },
      {
         "name":"database\/migrations\/2022_10_17_063101_insert_finnish_into_machine_translation_engine_language_pairs_table.php",
         "appliedFixers":[
            "class_definition",
            "braces",
            "curly_braces_position",
            "trailing_comma_in_multiline"
         ],
         "diff":"--- database\/migrations\/2022_10_17_063101_insert_finnish_into_machine_translation_engine_language_pairs_table.php\n+++ database\/migrations\/2022_10_17_063101_insert_finnish_into_machine_translation_engine_language_pairs_table.php\n@@ -8,7 +8,7 @@\n {\n     \/** @var array *\/\n     private const ENGINE_TYPES = [\n-        'google', 'microsoft', 'deepL', 'yaraku'\n+        'google', 'microsoft', 'deepL', 'yaraku',\n     ];\n \n     \/** @var string *\/\n@@ -19,7 +19,7 @@\n         'google' => [],\n         'microsoft' => ['tl'],\n         'deepL' => ['ar', 'bn', 'hi', 'ko', 'mn', 'ms', 'my', 'ne', 'th', 'tl', 'vi', 'zh_Hant'],\n-        'yaraku' => []\n+        'yaraku' => [],\n     ];\n \n     public function up(): void\n@@ -42,12 +42,12 @@\n                 $languagePairs[] = [\n                     'sourceLanguage_id' => self::FINNISH,\n                     'targetLanguage_id' => $language,\n-                    'machineTranslationEngine_id' => $engineId\n+                    'machineTranslationEngine_id' => $engineId,\n                 ];\n                 $languagePairs[] = [\n                     'sourceLanguage_id' => $language,\n                     'targetLanguage_id' => self::FINNISH,\n-                    'machineTranslationEngine_id' => $engineId\n+                    'machineTranslationEngine_id' => $engineId,\n                 ];\n             }\n         }\n"
      }
   ],
   "time":{
      "total":0
   },
   "memory":0
}
